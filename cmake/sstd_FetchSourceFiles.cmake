include_guard()

function(sstd_target_fetch_source_files TARGET_NAME)
    get_target_property(TARGET_SOURCES ${TARGET_NAME} SOURCES)
    if(TARGET_SOURCES)
        foreach(TARGET_SOURCE IN LISTS TARGET_SOURCES)
            cmake_path(
                ABSOLUTE_PATH
                TARGET_SOURCE
                BASE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
            )
            list(APPEND RESULT_TARGET_SOURCES "${TARGET_SOURCE}")
        endforeach()
        
        set(${TARGET_NAME}_SOURCES "${RESULT_TARGET_SOURCES}" PARENT_SCOPE)
    endif()

    get_target_property(TARGET_INCLUDE_DIRECTORIES ${TARGET_NAME} INCLUDE_DIRECTORIES)
    if(TARGET_INCLUDE_DIRECTORIES)
        list(APPEND TARGET_ALL_INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRECTORIES}")
    endif()
    get_target_property(TARGET_INTERFACE_INCLUDE_DIRECTORIES ${TARGET_NAME} INTERFACE_INCLUDE_DIRECTORIES)
    if(TARGET_INTERFACE_INCLUDE_DIRECTORIES)
        list(APPEND TARGET_ALL_INCLUDE_DIRECTORIES "${TARGET_INTERFACE_INCLUDE_DIRECTORIES}")
    endif()

    foreach(TARGET_INCLUDE_DIRECTORY IN LISTS TARGET_ALL_INCLUDE_DIRECTORIES)
        file(GLOB_RECURSE DIRECTORY_HEADERS CONFIGURE_DEPENDS "${TARGET_INCLUDE_DIRECTORY}/*.hpp")
        list(APPEND TARGET_HEADERS "${DIRECTORY_HEADERS}")
    endforeach()

    set(${TARGET_NAME}_HEADERS "${TARGET_HEADERS}" PARENT_SCOPE)
endfunction()
